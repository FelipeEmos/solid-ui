{
  "name": "badge-delta",
  "dependencies": [
    "@kobalte/core",
    "solid-icons"
  ],
  "registryDependencies": [
    "badge"
  ],
  "files": [
    {
      "name": "badge-delta.tsx",
      "content": "import type { Component } from \"solid-js\"\nimport { splitProps } from \"solid-js\"\n\nimport type { VariantProps } from \"class-variance-authority\"\nimport { cva } from \"class-variance-authority\"\nimport type { IconTypes } from \"solid-icons\"\nimport {\n  TbArrowDown,\n  TbArrowDownRight,\n  TbArrowRight,\n  TbArrowUp,\n  TbArrowUpRight\n} from \"solid-icons/tb\"\n\nimport { cn } from \"~/lib/utils\"\nimport type { BadgeProps } from \"~/registry/ui/badge\"\nimport { Badge } from \"~/registry/ui/badge\"\n\ntype DeltaType = \"increase\" | \"moderateIncrease\" | \"unchanged\" | \"moderateDecrease\" | \"decrease\"\n\nconst badgeDeltaVariants = cva(\"\", {\n  variants: {\n    variant: {\n      success: \"bg-success text-success-foreground hover:bg-success\",\n      warning: \"bg-warning text-warning-foreground hover:bg-warning\",\n      error: \"bg-error text-error-foreground hover:bg-error\"\n    }\n  }\n})\ntype DeltaVariant = NonNullable<VariantProps<typeof badgeDeltaVariants>[\"variant\"]>\n\nconst iconMap: { [key in DeltaType]: IconTypes } = {\n  increase: TbArrowUp,\n  moderateIncrease: TbArrowUpRight,\n  unchanged: TbArrowRight,\n  moderateDecrease: TbArrowDownRight,\n  decrease: TbArrowDown\n}\n\nconst variantMap: { [key in DeltaType]: DeltaVariant } = {\n  increase: \"success\",\n  moderateIncrease: \"success\",\n  unchanged: \"warning\",\n  moderateDecrease: \"error\",\n  decrease: \"error\"\n}\n\nexport interface BadgeDeltaProps extends Omit<BadgeProps, \"variant\"> {\n  deltaType: DeltaType\n}\n\nconst BadgeDelta: Component<BadgeDeltaProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\", \"children\", \"deltaType\"])\n  const Icon = iconMap[props.deltaType]\n  const variant = variantMap[props.deltaType]\n\n  return (\n    <Badge class={cn(badgeDeltaVariants({ variant }), props.class)} {...rest}>\n      <span class=\"flex gap-1\">\n        <Icon class=\"h-4 w-4\" />\n        {props.children}\n      </span>\n    </Badge>\n  )\n}\n\nexport { BadgeDelta }\n"
    }
  ],
  "type": "ui"
}