{
  "name": "badge",
  "files": [
    {
      "name": "badge.tsx",
      "content": "import type { Component, ComponentProps } from \"solid-js\"\nimport { splitProps } from \"solid-js\"\n\nimport type { VariantProps } from \"class-variance-authority\"\nimport { cva } from \"class-variance-authority\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst badgeVariants = cva(\n  \"focus:ring-ring inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/80 border-transparent\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80 border-transparent\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/80 border-transparent\",\n        outline: \"text-foreground\"\n      }\n    },\n    defaultVariants: {\n      variant: \"default\"\n    }\n  }\n)\n\nexport interface BadgeProps extends ComponentProps<\"div\">, VariantProps<typeof badgeVariants> {}\n\nconst Badge: Component<BadgeProps> = (props) => {\n  const [, rest] = splitProps(props, [\"variant\", \"class\"])\n  return <div class={cn(badgeVariants({ variant: props.variant }), props.class)} {...rest} />\n}\n\nexport { Badge, badgeVariants }\n"
    }
  ],
  "type": "ui"
}