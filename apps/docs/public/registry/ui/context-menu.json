{
  "name": "context-menu",
  "dependencies": [
    "@kobalte/core",
    "solid-icons"
  ],
  "files": [
    {
      "name": "context-menu.tsx",
      "content": "import type { Component, ComponentProps } from \"solid-js\"\r\nimport { splitProps } from \"solid-js\"\r\n\r\nimport { ContextMenu as ContextMenuPrimitive } from \"@kobalte/core\"\r\nimport { TbCheck, TbChevronRight, TbCircle } from \"solid-icons/tb\"\r\n\r\nimport { cn } from \"~/lib/utils\"\r\n\r\nconst ContextMenu: Component<ContextMenuPrimitive.ContextMenuRootProps> = (props) => {\r\n  return <ContextMenuPrimitive.Root gutter={4} {...props} />\r\n}\r\n\r\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\r\n\r\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\r\n\r\nconst ContextMenuContent: Component<ContextMenuPrimitive.ContextMenuContentProps> = (props) => {\r\n  const [, rest] = splitProps(props, [\"class\"])\r\n  return (\r\n    <ContextMenuPrimitive.Portal>\r\n      <ContextMenuPrimitive.Content\r\n        class={cn(\r\n          \"bg-popover text-popover-foreground animate-in z-50 min-w-[8rem] origin-[var(--kb-menu-content-transform-origin)] overflow-hidden rounded-md border p-1 shadow-md\",\r\n          props.class\r\n        )}\r\n        {...rest}\r\n      />\r\n    </ContextMenuPrimitive.Portal>\r\n  )\r\n}\r\n\r\nconst ContextMenuItem: Component<ContextMenuPrimitive.ContextMenuItemProps> = (props) => {\r\n  const [, rest] = splitProps(props, [\"class\"])\r\n  return (\r\n    <ContextMenuPrimitive.Item\r\n      class={cn(\r\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n        props.class\r\n      )}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nconst ContextMenuShortcut: Component<ComponentProps<\"span\">> = (props) => {\r\n  const [, rest] = splitProps(props, [\"class\"])\r\n  return <span class={cn(\"ml-auto text-xs tracking-widest opacity-60\", props.class)} {...rest} />\r\n}\r\n\r\nconst ContextMenuSeparator: Component<ContextMenuPrimitive.ContextMenuSeparatorProps> = (props) => {\r\n  const [, rest] = splitProps(props, [\"class\"])\r\n  return (\r\n    <ContextMenuPrimitive.Separator class={cn(\"bg-muted -mx-1 my-1 h-px\", props.class)} {...rest} />\r\n  )\r\n}\r\n\r\nconst ContextMenuSub = ContextMenuPrimitive.Sub\r\n\r\nconst ContextMenuSubTrigger: Component<ContextMenuPrimitive.ContextMenuSubTriggerProps> = (\r\n  props\r\n) => {\r\n  const [, rest] = splitProps(props, [\"class\", \"children\"])\r\n  return (\r\n    <ContextMenuPrimitive.SubTrigger\r\n      class={cn(\r\n        \"focus:bg-accent data-[state=open]:bg-accent flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none\",\r\n        props.class\r\n      )}\r\n      {...rest}\r\n    >\r\n      {props.children}\r\n      <TbChevronRight class=\"ml-auto h-4 w-4\" />\r\n    </ContextMenuPrimitive.SubTrigger>\r\n  )\r\n}\r\n\r\nconst ContextMenuSubContent: Component<ContextMenuPrimitive.ContextMenuSubContentProps> = (\r\n  props\r\n) => {\r\n  const [, rest] = splitProps(props, [\"class\"])\r\n  return (\r\n    <ContextMenuPrimitive.SubContent\r\n      class={cn(\r\n        \"bg-popover text-popover-foreground animate-in z-50 min-w-[8rem] origin-[var(--kb-menu-content-transform-origin)] overflow-hidden rounded-md border p-1 shadow-md\",\r\n        props.class\r\n      )}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nconst ContextMenuCheckboxItem: Component<ContextMenuPrimitive.ContextMenuCheckboxItemProps> = (\r\n  props\r\n) => {\r\n  const [, rest] = splitProps(props, [\"class\", \"children\"])\r\n  return (\r\n    <ContextMenuPrimitive.CheckboxItem\r\n      class={cn(\r\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n        props.class\r\n      )}\r\n      {...rest}\r\n    >\r\n      <span class=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n        <ContextMenuPrimitive.ItemIndicator>\r\n          <TbCheck class=\"h-4 w-4\" />\r\n        </ContextMenuPrimitive.ItemIndicator>\r\n      </span>\r\n      {props.children}\r\n    </ContextMenuPrimitive.CheckboxItem>\r\n  )\r\n}\r\n\r\nconst ContextMenuGroup = ContextMenuPrimitive.Group\r\n\r\nconst ContextMenuGroupLabel: Component<ContextMenuPrimitive.ContextMenuGroupLabelProps> = (\r\n  props\r\n) => {\r\n  const [, rest] = splitProps(props, [\"class\"])\r\n  return (\r\n    <ContextMenuPrimitive.GroupLabel\r\n      class={cn(\"px-2 py-1.5 text-sm font-semibold\", props.class)}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\r\n\r\nconst ContextMenuRadioItem: Component<ContextMenuPrimitive.ContextMenuRadioItemProps> = (props) => {\r\n  const [, rest] = splitProps(props, [\"class\", \"children\"])\r\n  return (\r\n    <ContextMenuPrimitive.RadioItem\r\n      class={cn(\r\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n        props.class\r\n      )}\r\n      {...rest}\r\n    >\r\n      <span class=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n        <ContextMenuPrimitive.ItemIndicator>\r\n          <TbCircle class=\"h-2 w-2 fill-current\" />\r\n        </ContextMenuPrimitive.ItemIndicator>\r\n      </span>\r\n      {props.children}\r\n    </ContextMenuPrimitive.RadioItem>\r\n  )\r\n}\r\n\r\nexport {\r\n  ContextMenu,\r\n  ContextMenuTrigger,\r\n  ContextMenuPortal,\r\n  ContextMenuContent,\r\n  ContextMenuItem,\r\n  ContextMenuShortcut,\r\n  ContextMenuSeparator,\r\n  ContextMenuSub,\r\n  ContextMenuSubTrigger,\r\n  ContextMenuSubContent,\r\n  ContextMenuCheckboxItem,\r\n  ContextMenuGroup,\r\n  ContextMenuGroupLabel,\r\n  ContextMenuRadioGroup,\r\n  ContextMenuRadioItem\r\n}\r\n"
    }
  ],
  "type": "ui"
}