{
  "name": "toast",
  "dependencies": [
    "@kobalte/core",
    "solid-icons"
  ],
  "files": [
    {
      "name": "toast.tsx",
      "content": "import type { Component, JSX } from \"solid-js\"\nimport { splitProps } from \"solid-js\"\nimport { Portal } from \"solid-js/web\"\n\nimport { Toast as ToastPrimitive, toaster } from \"@kobalte/core\"\nimport type { VariantProps } from \"class-variance-authority\"\nimport { cva } from \"class-variance-authority\"\nimport { TbX } from \"solid-icons/tb\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Toaster: Component<ToastPrimitive.ToastListProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <Portal>\n      <ToastPrimitive.Region>\n        <ToastPrimitive.List\n          class={cn(\n            \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse gap-2 p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n            props.class\n          )}\n          {...rest}\n        />\n      </ToastPrimitive.Region>\n    </Portal>\n  )\n}\n\nconst toastVariants = cva(\n  \"data-[opened]:animate-in data-[closed]:animate-out data-[swipe=end]:animate-out data-[closed]:fade-out-80 data-[closed]:slide-out-to-right-full data-[opened]:slide-in-from-top-full data-[opened]:sm:slide-in-from-bottom-full group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--kb-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--kb-toast-swipe-move-x)] data-[swipe=move]:transition-none\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground border\",\n        destructive:\n          \"destructive border-destructive bg-destructive text-destructive-foreground group\"\n      }\n    },\n    defaultVariants: {\n      variant: \"default\"\n    }\n  }\n)\ntype ToastVariant = NonNullable<VariantProps<typeof toastVariants>[\"variant\"]>\n\nexport interface ToastProps\n  extends ToastPrimitive.ToastRootProps,\n    VariantProps<typeof toastVariants> {}\n\nconst Toast: Component<ToastProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\", \"variant\"])\n  return (\n    <ToastPrimitive.Root\n      class={cn(toastVariants({ variant: props.variant }), props.class)}\n      {...rest}\n    />\n  )\n}\n\nconst ToastClose: Component<ToastPrimitive.ToastCloseButtonProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <ToastPrimitive.CloseButton\n      class={cn(\n        \"text-foreground/50 hover:text-foreground absolute right-2 top-2 rounded-md p-1 opacity-0 transition-opacity focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n        props.class\n      )}\n      {...rest}\n    >\n      <TbX class=\"h-4 w-4\" />\n    </ToastPrimitive.CloseButton>\n  )\n}\n\nconst ToastTitle: Component<ToastPrimitive.ToastTitleProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return <ToastPrimitive.Title class={cn(\"text-sm font-semibold\", props.class)} {...rest} />\n}\n\nconst ToastDescription: Component<ToastPrimitive.ToastDescriptionProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return <ToastPrimitive.Description class={cn(\"text-sm opacity-90\", props.class)} {...rest} />\n}\n\nfunction showToast(props: {\n  title?: JSX.Element\n  description?: JSX.Element\n  variant?: ToastVariant\n  duration?: number\n}) {\n  toaster.show((data) => (\n    <Toast toastId={data.toastId} variant={props.variant} duration={props.duration}>\n      <div class=\"grid gap-1\">\n        {props.title && <ToastTitle>{props.title}</ToastTitle>}\n        {props.description && <ToastDescription>{props.description}</ToastDescription>}\n      </div>\n      <ToastClose />\n    </Toast>\n  ))\n}\n\nexport { Toaster, Toast, ToastClose, ToastTitle, ToastDescription, showToast }\n"
    }
  ],
  "type": "ui"
}