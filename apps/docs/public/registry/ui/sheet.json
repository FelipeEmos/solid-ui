{
  "name": "sheet",
  "dependencies": [
    "@kobalte/core",
    "solid-icons"
  ],
  "files": [
    {
      "name": "sheet.tsx",
      "content": "import type { Component, ComponentProps } from \"solid-js\"\nimport { splitProps } from \"solid-js\"\n\nimport { Dialog as SheetPrimitive } from \"@kobalte/core\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { TbX } from \"solid-icons/tb\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.CloseButton\n\nconst portalVariants = cva(\"fixed inset-0 z-50 flex\", {\n  variants: {\n    position: {\n      top: \"items-start\",\n      bottom: \"items-end\",\n      left: \"justify-start\",\n      right: \"justify-end\"\n    }\n  },\n  defaultVariants: { position: \"right\" }\n})\n\ninterface SheetPortalProps\n  extends SheetPrimitive.DialogPortalProps,\n    VariantProps<typeof portalVariants> {}\n\nconst SheetPortal: Component<SheetPortalProps> = (props) => {\n  const [, rest] = splitProps(props, [\"position\", \"children\"])\n  return (\n    <SheetPrimitive.Portal {...rest}>\n      <div class={portalVariants({ position: props.position })}>{props.children}</div>\n    </SheetPrimitive.Portal>\n  )\n}\n\nconst SheetOverlay: Component<SheetPrimitive.DialogOverlayProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <SheetPrimitive.Overlay\n      class={cn(\n        \"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm transition-all duration-100 data-[state=closed]:animate-out data-[state=closed]:fade-out data-[state=open]:fade-in\",\n        props.class\n      )}\n      {...rest}\n    />\n  )\n}\n\nconst sheetVariants = cva(\n  \"fixed z-50 scale-100 gap-4 border bg-background p-6 opacity-100 shadow-lg\",\n  {\n    variants: {\n      position: {\n        top: \"w-full duration-300 animate-in slide-in-from-top\",\n        bottom: \"w-full duration-300 animate-in slide-in-from-bottom\",\n        left: \"h-full duration-300 animate-in slide-in-from-left\",\n        right: \"h-full duration-300 animate-in slide-in-from-right\"\n      },\n      size: {\n        content: \"\",\n        default: \"\",\n        sm: \"\",\n        lg: \"\",\n        xl: \"\",\n        full: \"\"\n      }\n    },\n    compoundVariants: [\n      {\n        position: [\"top\", \"bottom\"],\n        size: \"content\",\n        class: \"max-h-screen\"\n      },\n      {\n        position: [\"top\", \"bottom\"],\n        size: \"default\",\n        class: \"h-1/3\"\n      },\n      {\n        position: [\"top\", \"bottom\"],\n        size: \"sm\",\n        class: \"h-1/4\"\n      },\n      {\n        position: [\"top\", \"bottom\"],\n        size: \"lg\",\n        class: \"h-1/2\"\n      },\n      {\n        position: [\"top\", \"bottom\"],\n        size: \"xl\",\n        class: \"h-5/6\"\n      },\n      {\n        position: [\"top\", \"bottom\"],\n        size: \"full\",\n        class: \"h-screen\"\n      },\n      {\n        position: [\"right\", \"left\"],\n        size: \"content\",\n        class: \"max-w-screen\"\n      },\n      {\n        position: [\"right\", \"left\"],\n        size: \"default\",\n        class: \"w-1/3\"\n      },\n      {\n        position: [\"right\", \"left\"],\n        size: \"sm\",\n        class: \"w-1/4\"\n      },\n      {\n        position: [\"right\", \"left\"],\n        size: \"lg\",\n        class: \"w-1/2\"\n      },\n      {\n        position: [\"right\", \"left\"],\n        size: \"xl\",\n        class: \"w-5/6\"\n      },\n      {\n        position: [\"right\", \"left\"],\n        size: \"full\",\n        class: \"w-screen\"\n      }\n    ],\n    defaultVariants: {\n      position: \"right\",\n      size: \"default\"\n    }\n  }\n)\n\nexport interface DialogContentProps\n  extends SheetPrimitive.DialogContentProps,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent: Component<DialogContentProps> = (props) => {\n  const [, rest] = splitProps(props, [\"position\", \"size\", \"class\", \"children\"])\n  return (\n    <SheetPortal position={props.position}>\n      <SheetOverlay />\n      <SheetPrimitive.Content\n        class={cn(sheetVariants({ position: props.position, size: props.size }), props.class)}\n        {...rest}\n      >\n        {props.children}\n        <SheetPrimitive.CloseButton class=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n          <TbX class=\"size-4\" />\n          <span class=\"sr-only\">Close</span>\n        </SheetPrimitive.CloseButton>\n      </SheetPrimitive.Content>\n    </SheetPortal>\n  )\n}\n\nconst SheetHeader: Component<ComponentProps<\"div\">> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <div class={cn(\"flex flex-col space-y-2 text-center sm:text-left\", props.class)} {...rest} />\n  )\n}\n\nconst SheetFooter: Component<ComponentProps<\"div\">> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <div\n      class={cn(\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\", props.class)}\n      {...rest}\n    />\n  )\n}\n\nconst SheetTitle: Component<SheetPrimitive.DialogTitleProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <SheetPrimitive.Title\n      class={cn(\"text-lg font-semibold text-foreground\", props.class)}\n      {...rest}\n    />\n  )\n}\n\nconst SheetDescription: Component<SheetPrimitive.DialogDescriptionProps> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <SheetPrimitive.Description\n      class={cn(\"text-sm text-muted-foreground\", props.class)}\n      {...rest}\n    />\n  )\n}\n\nexport {\n  Sheet,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription\n}\n"
    }
  ],
  "type": "ui"
}