{
  "name": "callout",
  "files": [
    {
      "name": "callout.tsx",
      "content": "import type { Component, ComponentProps } from \"solid-js\"\r\nimport { splitProps } from \"solid-js\"\r\n\r\nimport type { VariantProps } from \"class-variance-authority\"\r\nimport { cva } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"~/lib/utils\"\r\n\r\nconst calloutVariants = cva(\"rounded-md border-l-4 p-2 pl-4\", {\r\n  variants: {\r\n    variant: {\r\n      default: \"border-info-foreground bg-info text-info-foreground\",\r\n      success: \"border-success-foreground bg-success text-success-foreground\",\r\n      warning: \"border-warning-foreground bg-warning text-warning-foreground\",\r\n      error: \"border-error-foreground bg-error text-error-foreground\"\r\n    }\r\n  },\r\n  defaultVariants: {\r\n    variant: \"default\"\r\n  }\r\n})\r\n\r\nexport interface CalloutProps extends ComponentProps<\"div\">, VariantProps<typeof calloutVariants> {}\r\n\r\nconst Callout: Component<CalloutProps> = (props) => {\r\n  const [, rest] = splitProps(props, [\"class\"])\r\n  return <div class={cn(calloutVariants({ variant: props.variant }), props.class)} {...rest} />\r\n}\r\n\r\nconst CalloutTitle: Component<ComponentProps<\"h3\">> = (props) => {\r\n  const [, rest] = splitProps(props, [\"class\"])\r\n  return <h3 class={cn(\"font-semibold\", props.class)} {...rest} />\r\n}\r\n\r\nconst CalloutContent: Component<ComponentProps<\"div\">> = (props) => {\r\n  const [, rest] = splitProps(props, [\"class\"])\r\n  return <div class={cn(\"mt-2\", props.class)} {...rest} />\r\n}\r\n\r\nexport { Callout, CalloutTitle, CalloutContent }\r\n"
    }
  ],
  "type": "ui"
}