{
  "name": "toast",
  "dependencies": [
    "@kobalte/core",
    "solid-icons"
  ],
  "files": [
    {
      "name": "toast.tsx",
      "content": "import type { Component, JSX } from \"solid-js\"\r\nimport { splitProps } from \"solid-js\"\r\nimport { Portal } from \"solid-js/web\"\r\n\r\nimport { Toast as ToastPrimitive, toaster } from \"@kobalte/core\"\r\nimport type { VariantProps } from \"class-variance-authority\"\r\nimport { cva } from \"class-variance-authority\"\r\nimport { TbX } from \"solid-icons/tb\"\r\n\r\nimport { cn } from \"~/lib/utils\"\r\n\r\nconst Toaster: Component<ToastPrimitive.ToastListProps> = (props) => {\r\n  const [, rest] = splitProps(props, [\"class\"])\r\n  return (\r\n    <Portal>\r\n      <ToastPrimitive.Region>\r\n        <ToastPrimitive.List\r\n          class={cn(\r\n            \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse gap-2 p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\r\n            props.class\r\n          )}\r\n          {...rest}\r\n        />\r\n      </ToastPrimitive.Region>\r\n    </Portal>\r\n  )\r\n}\r\n\r\nconst toastVariants = cva(\r\n  \"data-[swipe=move]:transition-none group relative pointer-events-auto flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=move]:translate-x-[var(--kb-toast-swipe-move-x)] data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--kb-toast-swipe-end-x)] data-[opened]:animate-in data-[closed]:animate-out data-[swipe=end]:animate-out data-[closed]:fade-out-80 data-[opened]:slide-in-from-top-full data-[opened]:sm:slide-in-from-bottom-full data-[closed]:slide-out-to-right-full\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-background border text-foreground\",\r\n        destructive:\r\n          \"group destructive border-destructive bg-destructive text-destructive-foreground\"\r\n      }\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\"\r\n    }\r\n  }\r\n)\r\ntype ToastVariant = NonNullable<VariantProps<typeof toastVariants>[\"variant\"]>\r\n\r\nexport interface ToastProps\r\n  extends ToastPrimitive.ToastRootProps,\r\n    VariantProps<typeof toastVariants> {}\r\n\r\nconst Toast: Component<ToastProps> = (props) => {\r\n  const [, rest] = splitProps(props, [\"class\", \"variant\"])\r\n  return (\r\n    <ToastPrimitive.Root\r\n      class={cn(toastVariants({ variant: props.variant }), props.class)}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nconst ToastClose: Component<ToastPrimitive.ToastCloseButtonProps> = (props) => {\r\n  const [, rest] = splitProps(props, [\"class\"])\r\n  return (\r\n    <ToastPrimitive.CloseButton\r\n      class={cn(\r\n        \"text-foreground/50 hover:text-foreground absolute right-2 top-2 rounded-md p-1 opacity-0 transition-opacity focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\r\n        props.class\r\n      )}\r\n      {...rest}\r\n    >\r\n      <TbX class=\"h-4 w-4\" />\r\n    </ToastPrimitive.CloseButton>\r\n  )\r\n}\r\n\r\nconst ToastTitle: Component<ToastPrimitive.ToastTitleProps> = (props) => {\r\n  const [, rest] = splitProps(props, [\"class\"])\r\n  return <ToastPrimitive.Title class={cn(\"text-sm font-semibold\", props.class)} {...rest} />\r\n}\r\n\r\nconst ToastDescription: Component<ToastPrimitive.ToastDescriptionProps> = (props) => {\r\n  const [, rest] = splitProps(props, [\"class\"])\r\n  return <ToastPrimitive.Description class={cn(\"text-sm opacity-90\", props.class)} {...rest} />\r\n}\r\n\r\nfunction showToast(props: {\r\n  title?: JSX.Element\r\n  description?: JSX.Element\r\n  variant?: ToastVariant\r\n  duration?: number\r\n}) {\r\n  toaster.show((data) => (\r\n    <Toast toastId={data.toastId} variant={props.variant} duration={props.duration}>\r\n      <div class=\"grid gap-1\">\r\n        {props.title && <ToastTitle>{props.title}</ToastTitle>}\r\n        {props.description && <ToastDescription>{props.description}</ToastDescription>}\r\n      </div>\r\n      <ToastClose />\r\n    </Toast>\r\n  ))\r\n}\r\n\r\nexport { Toaster, Toast, ToastClose, ToastTitle, ToastDescription, showToast }\r\n"
    }
  ],
  "type": "ui"
}